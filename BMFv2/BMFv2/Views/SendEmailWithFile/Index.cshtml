@model BMFv2.Models.SendEmailWithFileViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
   using (Html.BeginForm())
-->
    
    @Html.AntiForgeryToken()

    @if (@ViewBag.Result != null)
    {
    <div class="alert alert-info">@ViewBag.Result</div>
    }

    <form action="/SendEmailWithFile/Send" method="post" enctype="multipart/form-data">

        <div class="form-horizontal">
            <h4>Send Email</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FromName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FromName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FromName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FromEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FromEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FromEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Choose file </label>
                <div class="col-md-10">
                    <input class="col-md-10" type="file" name="Upload"/>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button>Send</button>
                </div>
            </div>
        </div>
    </form>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <!--

        <form action="/SendEmailWithFile/Send" method="post" enctype="multipart/form-data">
        <h2>Send an email</h2>
        <div> From </div> <input type="text" name="FromName" />
        <div> Email </div> <input type="text" name="FromEmail" />
        <div> Message </div> <input type="text" name="Message" />
        <p>
        <p>
            <button>Send</button>
        </p>
        </p>
    </form>
        <form action="/SendEmailWithFile/Send" method="post" enctype="multipart/form-data">
        <h2>Send an email</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FromName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <p>
        <p>
            <button>Send</button>
        </p>
        </p>
    </form>
    -->
